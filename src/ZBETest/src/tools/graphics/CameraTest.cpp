#include "gtest/gtest.h"

#include <memory>
#include <cstdio>

#include "ZBE/core/tools/shared/implementations/SimpleValue.h"

#include "ZBE/tools/graphics/Camera.h"


namespace CameraTest {

void testData(int testIndex, zbe::Vector3D eye, zbe::Vector3D target, zbe::Vector3D up, float fov, float aspect, float znear, float zfar, const std::vector<float>& transform, const std::vector<float>& projection) {
  zbe::Camera cam;
  auto eyeVal = std::make_shared<zbe::SimpleValue<zbe::Vector3D> >(eye);
  auto targetVal = std::make_shared<zbe::SimpleValue<zbe::Vector3D> >(target);
  auto upVal = std::make_shared<zbe::SimpleValue<zbe::Vector3D> >(up);

  cam.set_perspective(fov, aspect, znear, zfar);

  cam.setEyeValue(eyeVal);
  cam.setTargetValue(targetVal);
  cam.setUpValue(upVal);

  cam.update();

  auto& trans = cam.getTransformMat();
  auto& proj = cam.getProjectionMat();

  EXPECT_EQ(transform.size(), 16) << "Test number " << testIndex << ". Input transform is a 4x4 matrix, must have 16 elements";
  EXPECT_EQ(projection.size(), 16) << "Test number " << testIndex << ". Input projection is a 4x4 matrix, must have 16 elements";;
  EXPECT_EQ(trans.size(), 16) << "Test number " << testIndex << ". Output trans is a 4x4 matrix, must have 16 elements";;
  EXPECT_EQ(proj.size(), 16) << "Test number " << testIndex << ". Output proj is a 4x4 matrix, must have 16 elements";;

  for(size_t i = 0; i < trans.size(); i++) {
    EXPECT_NEAR(transform[i], trans[i], 0.000001f) << "Test number " << testIndex << ". Output transform matrix element " << i << " must match input";
    EXPECT_NEAR(projection[i], proj[i], 0.000001f) << "Test number " << testIndex << ". Output projection matrix element " << i << " must match input";
  }
}

TEST(Camera, usage) {

  testData(0,
    {0.0f, 0.0f, 0.0f},
    {1.0f, 0.0f, 0.0f},
    {0.0f, 1.0f, 0.0f},
    120.0f, 1.0f, 1.0f, 50.0f,
    {0.00000000000000000000,0.00000000000000000000,-1.00000000000000000000,0.00000000000000000000,0.00000000000000000000,1.00000000000000000000,-0.00000000000000000000,0.00000000000000000000,1.00000000000000000000,0.00000000000000000000,-0.00000000000000000000,0.00000000000000000000,-0.00000000000000000000,-0.00000000000000000000,0.00000000000000000000,1.00000000000000000000},
    {0.57735025882720947266,0.00000000000000000000,0.00000000000000000000,0.00000000000000000000,0.00000000000000000000,0.57735025882720947266,0.00000000000000000000,0.00000000000000000000,0.00000000000000000000,0.00000000000000000000,-1.04081630706787109375,-2.04081630706787109375,0.00000000000000000000,0.00000000000000000000,-1.00000000000000000000,0.00000000000000000000}
  );

  testData(1,
    {42.0f, 37.0f, 4.0f},
    {1.0f, 0.0f, 0.0f},
    {0.0f, 1.0f, 0.0f},
    120.0f, 1.0f, 1.0f, 50.0f,
    {0.097100,-0.665057,0.740453,0.000000,0.000000,0.743969,0.668214,0.000000,-0.995275,-0.064884,0.072239,0.000000,-0.097100,0.665057,-56.111927,1.000000},
    {0.57735025882720947266,0.00000000000000000000,0.00000000000000000000,0.00000000000000000000,0.00000000000000000000,0.57735025882720947266,0.00000000000000000000,0.00000000000000000000,0.00000000000000000000,0.00000000000000000000,-1.04081630706787109375,-2.04081630706787109375,0.00000000000000000000,0.00000000000000000000,-1.00000000000000000000,0.00000000000000000000}
  );

  testData(2,
    {7.0f, 25.0f, 2.0f},
    {8.0f, 3.14f, 1547.0f},
    {45.5f, 13.0f, 87.0f},
    120.0f, 1.0f, 1.0f, 50.0f,
    {-0.29881700873374938965,0.95431023836135864258,-0.00064718426438048482,0.00000000000000000000,0.95421218872070312500,0.29879590868949890137,0.01414744835346937180,0.00000000000000000000,0.01369443070143461227,0.00360994692891836166,-0.99989968538284301758,0.00000000000000000000,-21.79097366333007812500,-14.15728855133056640625,1.65064346790313720703,1.00000000000000000000},
    {0.57735025882720947266,0.00000000000000000000,0.00000000000000000000,0.00000000000000000000,0.00000000000000000000,0.57735025882720947266,0.00000000000000000000,0.00000000000000000000,0.00000000000000000000,0.00000000000000000000,-1.04081630706787109375,-2.04081630706787109375,0.00000000000000000000,0.00000000000000000000,-1.00000000000000000000,0.00000000000000000000}
  );

  testData(3,
    {0.0f, 0.0f, 0.0f},
    {1.0f, 0.0f, 0.0f},
    {0.0f, 1.0f, 0.0f},
    90.0f, 4.0f/3.0f, 1.0f, 10.0f,
    {0.00000000000000000000,0.00000000000000000000,-1.00000000000000000000,0.00000000000000000000,0.00000000000000000000,1.00000000000000000000,-0.00000000000000000000,0.00000000000000000000,1.00000000000000000000,0.00000000000000000000,-0.00000000000000000000,0.00000000000000000000,-0.00000000000000000000,-0.00000000000000000000,0.00000000000000000000,1.00000000000000000000},
    {0.75000000000000000000,0.00000000000000000000,0.00000000000000000000,0.00000000000000000000,0.00000000000000000000,1.00000000000000000000,0.00000000000000000000,0.00000000000000000000,0.00000000000000000000,0.00000000000000000000,-1.22222220897674560547,-2.22222232818603515625,0.00000000000000000000,0.00000000000000000000,-1.00000000000000000000,0.00000000000000000000}
  );

  testData(4,
    {42.0f, 37.0f, 4.0f},
    {1.0f, 0.0f, 0.0f},
    {0.0f, 1.0f, 0.0f},
    90.0f, 4.0f/3.0f, 1.0f, 10.0f,
    {0.09709996730089187622,-0.66505658626556396484,0.74045348167419433594,0.00000000000000000000,0.00000000000000000000,0.74396902322769165039,0.66821414232254028320,0.00000000000000000000,-0.99527466297149658203,-0.06488356739282608032,0.07223936170339584351,0.00000000000000000000,-0.09709996730089187622,0.66505658626556396484,-56.11192703247070312500,1.00000000000000000000},
    {0.75000000000000000000,0.00000000000000000000,0.00000000000000000000,0.00000000000000000000,0.00000000000000000000,1.00000000000000000000,0.00000000000000000000,0.00000000000000000000,0.00000000000000000000,0.00000000000000000000,-1.22222220897674560547,-2.22222232818603515625,0.00000000000000000000,0.00000000000000000000,-1.00000000000000000000,0.00000000000000000000}
  );

  testData(5,
    {7.0f, 25.0f, 2.0f},
    {8.0f, 3.14f, 1547.0f},
    {45.5f, 13.0f, 87.0f},
    90.0f, 4.0f/3.0f, 1.0f, 10.0f,
    {-0.29881700873374938965,0.95431023836135864258,-0.00064718426438048482,0.00000000000000000000,0.95421218872070312500,0.29879590868949890137,0.01414744835346937180,0.00000000000000000000,0.01369443070143461227,0.00360994692891836166,-0.99989968538284301758,0.00000000000000000000,-21.79097366333007812500,-14.15728855133056640625,1.65064346790313720703,1.00000000000000000000},
    {0.75000000000000000000,0.00000000000000000000,0.00000000000000000000,0.00000000000000000000,0.00000000000000000000,1.00000000000000000000,0.00000000000000000000,0.00000000000000000000,0.00000000000000000000,0.00000000000000000000,-1.22222220897674560547,-2.22222232818603515625,0.00000000000000000000,0.00000000000000000000,-1.00000000000000000000,0.00000000000000000000}
  );

  testData(6,
    {0.0f, 0.0f, 0.0f},
    {1.0f, 0.0f, 0.0f},
    {0.0f, 1.0f, 0.0f},
    70.0f, 16.0f/9.0f, 0.1f, 100.0f,
    {0.00000000000000000000,0.00000000000000000000,-1.00000000000000000000,0.00000000000000000000,0.00000000000000000000,1.00000000000000000000,-0.00000000000000000000,0.00000000000000000000,1.00000000000000000000,0.00000000000000000000,-0.00000000000000000000,0.00000000000000000000,-0.00000000000000000000,-0.00000000000000000000,0.00000000000000000000,1.00000000000000000000},
    {0.80333322286605834961,0.00000000000000000000,0.00000000000000000000,0.00000000000000000000,0.00000000000000000000,1.42814791202545166016,0.00000000000000000000,0.00000000000000000000,0.00000000000000000000,0.00000000000000000000,-1.00200200080871582031,-0.20020020008087158203,0.00000000000000000000,0.00000000000000000000,-1.00000000000000000000,0.00000000000000000000}
  );

  testData(7,
    {42.0f, 37.0f, 4.0f},
    {1.0f, 0.0f, 0.0f},
    {0.0f, 1.0f, 0.0f},
    70.0f, 16.0f/9.0f, 0.1f, 100.0f,
    {0.09709996730089187622,-0.66505658626556396484,0.74045348167419433594,0.00000000000000000000,0.00000000000000000000,0.74396902322769165039,0.66821414232254028320,0.00000000000000000000,-0.99527466297149658203,-0.06488356739282608032,0.07223936170339584351,0.00000000000000000000,-0.09709996730089187622,0.66505658626556396484,-56.11192703247070312500,1.00000000000000000000},
    {0.80333322286605834961,0.00000000000000000000,0.00000000000000000000,0.00000000000000000000,0.00000000000000000000,1.42814791202545166016,0.00000000000000000000,0.00000000000000000000,0.00000000000000000000,0.00000000000000000000,-1.00200200080871582031,-0.20020020008087158203,0.00000000000000000000,0.00000000000000000000,-1.00000000000000000000,0.00000000000000000000}
  );

  testData(8,
    {7.0f, 25.0f, 2.0f},
    {8.0f, 3.14f, 1547.0f},
    {45.5f, 13.0f, 87.0f},
    70.0f, 16.0f/9.0f, 0.1f, 100.0f,
    {-0.29881700873374938965,0.95431023836135864258,-0.00064718426438048482,0.00000000000000000000,0.95421218872070312500,0.29879590868949890137,0.01414744835346937180,0.00000000000000000000,0.01369443070143461227,0.00360994692891836166,-0.99989968538284301758,0.00000000000000000000,-21.79097366333007812500,-14.15728855133056640625,1.65064346790313720703,1.00000000000000000000},
    {0.80333322286605834961,0.00000000000000000000,0.00000000000000000000,0.00000000000000000000,0.00000000000000000000,1.42814791202545166016,0.00000000000000000000,0.00000000000000000000,0.00000000000000000000,0.00000000000000000000,-1.00200200080871582031,-0.20020020008087158203,0.00000000000000000000,0.00000000000000000000,-1.00000000000000000000,0.00000000000000000000}
  );
}

}  // namespace RsrcFolderLoadDmnTest
